#skills {
  display: flex;
  flex-direction: column;
  justify-content: center;
  background-color: $white-color;
  color: $dark-blue-text;
  margin-top: 0rem;
  padding-top: 5rem;

  @include respond(tab-land) {
    margin-top: 0;
    padding-top: 5rem;
  }

  .skills-wrapper {
    @include respond(phone) {
      padding-bottom: 5rem;
    }
  }

  .skills-title {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 3.2rem;
    text-align: left;

    @include respond(tab-land) {
      font-size: 4rem;
    }
    @include respond(tab-port) {
      font-size: 3.6rem;
      text-align: center;
    }
    @include respond(phone) {
      font-size: 3.5rem;
      line-height: 1.5;
    }
    @include respond(phone-xs) {
      font-size: 2.8rem;
    }
  }

  /* Charts */
  /**
   * 1. The `reverse` animation direction plays the animation backwards
   *    which makes it start at the stroke offset 100 which means displaying
   *    no stroke at all and animating it to the value defined in the SVG
   *    via the inline `stroke-dashoffset` attribute.
   * 2. Rotate by -90 degree to make the starting point of the
   *    stroke the top of the circle.
   * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
   *    and Edge, use the transform attribute directly on the SVG element as a
   * .  workaround (https://markus.oberlehner.net/blog/pure-css-animated-svg-circle-chart/#part-4-internet-explorer-strikes-back).
   */
  .circle-chart__circle {
    animation: circle-chart-fill 3s reverse; /* 1 */ 
    transform: rotate(-90deg); /* 2, 3 */
    transform-origin: center; /* 4 */
  }

  .circle-chart__info {
    animation: circle-chart-appear 2s forwards;
    opacity: 0;
    transform: translateY(0.3em);
  }

  @keyframes circle-chart-fill {
    to { stroke-dasharray: 0 100; }
  }

  @keyframes circle-chart-appear {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @media (min-width: 31em) {
    .grid {
      grid-template-columns: repeat(1, 1fr);
    }
  }

  .hero-cta {
    display: flex;

    @include respond(tab-port) {
      justify-content: center;
    }

    & a {
      font-size: 2.4rem;

      @include respond(phone) {
        font-size: 2rem;
      }
    }
  }
}
